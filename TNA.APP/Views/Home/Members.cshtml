@using TNA.APP.Models
@model List<MemberViewModel>

@section Hero { }

@{
    ViewData["Title"] = "Miembros";
    string IconClassFor(string id) => id?.ToUpperInvariant() switch
    {
        "IG" => "bi-instagram",
        "YT" => "bi-youtube",
        "DC" or "DI" => "bi-discord",
        "TW" => "bi-twitch",
        "FB" => "bi-facebook",
        "X" => "bi-x",
        "ST" => "bi-steam",
        _ => "bi-link-45deg"
    };
}
<section class="container mt-5">
    <h2 class="mb-3">Miembros del clan</h2>

    @if (Model == null || !Model.Any())
    {
        <div class="glass-card">No hay miembros para mostrar.</div>
    }
    else
    {
        <div class="row g-3">
            @foreach (var item in Model)
            {
                var m = item.Member;
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                    <article class="glass-card d-flex flex-column align-items-start">
                        <div class="w-100 d-flex align-items-center gap-3">
                            <img src="@(Url.Content(string.IsNullOrWhiteSpace(m.ProfileImage) ? "~/images/avatar-placeholder.webp" : m.ProfileImage))"
                                 alt="@m.Nickname"
                                 class="rounded-circle member-avatar" />
                            <div class="flex-grow-1">
                                <div class="card-title">@m.Nickname</div>
                                <div class="glass-meta small">
                                    @if (!string.IsNullOrWhiteSpace(m.FirstName) || !string.IsNullOrWhiteSpace(m.LastName))
                                    {
                                        @($"{m.FirstName} {m.LastName}".Trim())
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sin nombre</span>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="mt-3 w-100">
                            @if (!string.IsNullOrWhiteSpace(m.Email))
                            {
                                <div class="small text-muted mb-2"><i class="bi bi-envelope me-1"></i> @m.Email</div>
                            }

                            <div class="d-flex flex-wrap gap-2">
                                @if (item.SocialMedias != null && item.SocialMedias.Any())
                                {
                                    foreach (var sm in item.SocialMedias.Where(s => s.Enabled))
                                    {
                                        var icon = IconClassFor(sm.SocialMediaId);
                                        <a class="social-link" href="@sm.SocialMediaUrl" target="_blank" rel="noopener noreferrer" aria-label="@sm.SocialMediaId">
                                            <i class="@icon"></i>
                                        </a>
                                    }
                                }
                                else
                                {
                                    <span class="badge-accent">Sin redes</span>
                                }
                            </div>
                        </div>
                    </article>
                </div>
            }
        </div>
    }
</section>