@using TNA.BLL.DTOs
@model TNA.APP.Models.HomeIndexViewModel

@{
    ViewData["Title"] = "Inicio";
}

<div class="container mt-4" id="rankings">
    <div class="mb-5">
        <div class="row align-items-center justify-content-between">
            <div class="col-12 col-md-8">
                <h1 class="hero-title">Estadísticas del clan</h1>
                <p class="hero-sub">Visualiza el rendimiento de los miembros: partidas, kills, daño y puntos de ranking.</p>
            </div>

            <div class="col-12 col-md-auto mt-3 mt-md-0 d-flex flex-column align-items-end">
                <form id="filterForm" asp-action="Index" method="get" class="d-inline w-100">
                    <div class="d-flex align-items-center">
                        <div class="input-group">
                            <select name="range" class="form-select" id="ddlPeriod">
                                @foreach (var item in Model.Ranges)
                                {
                                    <option value="@item.Value" selected="@(item.Value == Model.SelectedRange ? "selected" : null)">@item.Text</option>
                                }
                            </select>
                        </div>

                        @* Botón con icono al lado del dropdown (separado con margen, outline-light pero con borde visible) *@
                        <button type="button"
                                class="btn btn-outline-light btn-sm btn-scoring-info ms-2"
                                id="btnScoringInfo"
                                data-bs-toggle="modal"
                                data-bs-target="#scoringModal"
                                aria-label="Cómo se puntúa">
                            <i class="bi bi-info-lg" aria-hidden="true"></i>
                        </button>

                        <noscript>
                            <button type="submit" class="btn btn-outline-secondary ms-2">Filtrar</button>
                        </noscript>
                    </div>
                </form>

                <div class="small text-muted-tna mt-2 text-md-end">
                    Rango seleccionado: <strong>@Model.RangeDisplay</strong>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Rankings == null || !Model.Rankings.Any())
    {
        <div class="alert alert-info">No hay datos para el rango seleccionado.</div>
    }
    else
    {
        // Variables C# dentro del bloque else (sin usar @{})
        var top = Model.Rankings.Take(3).ToList();
        var first = top.Count > 0 ? top.ElementAtOrDefault(0) : null;
        var second = top.Count > 1 ? top.ElementAtOrDefault(1) : null;
        var third = top.Count > 2 ? top.ElementAtOrDefault(2) : null;
        var start = 3;
        var end = Math.Min(Model.Rankings.Count, 23);

        <div class="podium-wrap mb-4">
            <div class="podium">
                @* Segundo - izquierda *@
                <div class="podium-item podium-2">
                    @if (second != null)
                    {
                        <div class="glass-card podium-card">
                            <div class="podium-card-header">
                                <div class="d-flex align-items-center gap-3">
                                    <span class="place-pill">#2</span>
                                    <div class="card-title">@(!string.IsNullOrEmpty(second.PlayerNickname) ? second.PlayerNickname : "Jugador")</div>
                                </div>

                                <div class="points-block">
                                    <div class="points-label">Puntos</div>
                                    <div class="points-value">@second.TotalPoints.ToString("F2")</div>
                                </div>
                            </div>

                            <div class="stats-grid">
                                <div class="stat-item">
                                    <strong>@second.MatchesCount</strong>
                                    <span class="stat-label">Partidas</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalKills</strong>
                                    <span class="stat-label">Kills</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalDBNOs</strong>
                                    <span class="stat-label">Derribos</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalHeadshotsKills</strong>
                                    <span class="stat-label">Headshots</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalAssists</strong>
                                    <span class="stat-label">Asistencias</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalDamageDealt</strong>
                                    <span class="stat-label">Daño</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalRevives</strong>
                                    <span class="stat-label">Revives</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalTeamKill</strong>
                                    <span class="stat-label">Team kills</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.TotalTimeSurvivedFormatted</strong>
                                    <span class="stat-label">Tiempo de juego</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@second.AverageWinPlace</strong>
                                    <span class="stat-label">Posición promedio</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                @* Primero - centro (más grande y destacado) *@
                <div class="podium-item podium-1">
                    @if (first != null)
                    {
                        <div class="glass-card podium-card podium-first">
                            <div class="podium-card-header">
                                <div class="d-flex align-items-center gap-3">
                                    <span class="place-pill place-gold">#1</span>
                                    <div class="card-title">@(!string.IsNullOrEmpty(first.PlayerNickname) ? first.PlayerNickname : "Jugador")</div>
                                </div>

                                <div class="points-block">
                                    <div class="points-label">Puntos</div>
                                    <div class="points-value">@first.TotalPoints.ToString("F2")</div>
                                </div>
                            </div>

                            <div class="stats-grid">
                                <div class="stat-item">
                                    <strong>@first.MatchesCount</strong>
                                    <span class="stat-label">Partidas</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalKills</strong>
                                    <span class="stat-label">Kills</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalDBNOs</strong>
                                    <span class="stat-label">Derribos</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalHeadshotsKills</strong>
                                    <span class="stat-label">Headshots</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalAssists</strong>
                                    <span class="stat-label">Asistencias</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalDamageDealt</strong>
                                    <span class="stat-label">Daño</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalRevives</strong>
                                    <span class="stat-label">Revives</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalTeamKill</strong>
                                    <span class="stat-label">Team kills</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.TotalTimeSurvivedFormatted</strong>
                                    <span class="stat-label">Tiempo de juego</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@first.AverageWinPlace</strong>
                                    <span class="stat-label">Posición promedio</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                @* Tercero - derecha *@
                <div class="podium-item podium-3">
                    @if (third != null)
                    {
                        <div class="glass-card podium-card">
                            <div class="podium-card-header">
                                <div class="d-flex align-items-center gap-3">
                                    <span class="place-pill place-bronze">#3</span>
                                    <div class="card-title">@(!string.IsNullOrEmpty(third.PlayerNickname) ? third.PlayerNickname : "Jugador")</div>
                                </div>

                                <div class="points-block">
                                    <div class="points-label">Puntos</div>
                                    <div class="points-value">@third.TotalPoints.ToString("F2")</div>
                                </div>
                            </div>

                            <div class="stats-grid">
                                <div class="stat-item">
                                    <strong>@third.MatchesCount</strong>
                                    <span class="stat-label">Partidas</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalKills</strong>
                                    <span class="stat-label">Kills</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalDBNOs</strong>
                                    <span class="stat-label">Derribos</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalHeadshotsKills</strong>
                                    <span class="stat-label">Headshots</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalAssists</strong>
                                    <span class="stat-label">Asistencias</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalDamageDealt</strong>
                                    <span class="stat-label">Daño</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalRevives</strong>
                                    <span class="stat-label">Revives</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalTeamKill</strong>
                                    <span class="stat-label">Team kills</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.TotalTimeSurvivedFormatted</strong>
                                    <span class="stat-label">Tiempo de juego</span>
                                </div>
                                <div class="stat-item">
                                    <strong>@third.AverageWinPlace</strong>
                                    <span class="stat-label">Posición promedio</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        @* Tabla mejorada con responsive y header fijo *@
        @if (Model.Rankings.Count > start)
        {
            <div class="table-container">
                <div class="table-scroll-wrapper">
                    <table class="table table-striped table-sm responsive-table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Jugador</th>
                                <th>Partidas</th>
                                <th>Derribos</th>
                                <th>Asistencias</th>
                                <th>Kills</th>
                                <th>Headshots</th>
                                <th>Daño</th>
                                <th>Revives</th>
                                <th>Team kills</th>
                                <th>Tiempo de juego</th>
                                <th>Posición promedio</th>
                                <th>Puntos</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = start; i < end; i++)
                            {
                                var r = Model.Rankings[i];
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>@(string.IsNullOrEmpty(r.PlayerNickname) ? "-" : r.PlayerNickname)</td>
                                    <td>@r.MatchesCount</td>
                                    <td>@r.TotalDBNOs</td>
                                    <td>@r.TotalAssists</td>
                                    <td>@r.TotalKills</td>
                                    <td>@r.TotalHeadshotsKills</td>
                                    <td>@r.TotalDamageDealt</td>
                                    <td>@r.TotalRevives</td>
                                    <td>@r.TotalTeamKill</td>
                                    <td>@r.TotalTimeSurvivedFormatted</td>
                                    <td>@r.AverageWinPlace</td>
                                    <td>@r.TotalPoints.ToString("F2")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="scroll-indicator">
                    ← Desliza para ver más →
                </div>
            </div>
        }
    }
</div>

@* Modal explicativo del sistema de puntuación (usa estilos del sistema: glass-modal) *@
<div class="modal fade" id="scoringModal" tabindex="-1" aria-labelledby="scoringModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content glass-modal">
            <div class="modal-header">
                <h5 class="modal-title" id="scoringModalLabel">Cómo funciona el sistema de puntuación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p>Resumen del cálculo que se realiza para obtener la puntuación de cada jugador:</p>
                <ul>
                    <li>Cada estadística por partido se convierte en una media por jugador y se normaliza frente al máximo observado entre jugadores (resultado entre 0 y 1).</li>
                    <li>Pesos aplicados a cada estadística:</li>
                    <ul>
                        <li>Derribos: <strong>0.08</strong></li>
                        <li>Asistencias: <strong>0.08</strong></li>
                        <li>Kills: <strong>0.30</strong></li>
                        <li>Headshots: <strong>0.06</strong></li>
                        <li>Daño: <strong>0.20</strong></li>
                        <li>Revives: <strong>0.05</strong></li>
                        <li>Tiempo de juego: <strong>0.10</strong></li>
                        <li>Posición (WinPlace, menor es mejor): <strong>0.13</strong></li>
                    </ul>
                    <li>Penalización por team-kills: hasta <strong>0.25 × normalizado(teamKills)</strong> (se resta).</li>
                    <li>BaseScore = sum(pesos × normalizaciones) - penalty, recortado entre 0 y 1.</li>
                    <li>Factor de confiabilidad: <strong>reliability = min(1, ln(Matches+1) / ln(11))</strong>. Esto reduce la puntuación cuando hay pocas partidas (10 partidas → 1.0).</li>
                    <li>Puntuación final = BaseScore × reliability. Se escala a 0–10 y se redondea a 2 decimales.</li>
                </ul>

                <h6>Cómo considera el sistema la cantidad de partidas (MatchesCount)</h6>
                <ul>
                    <li>MatchesCount no suma puntos directamente: impacta en las medias (totales ÷ partidas) y en el factor de confiabilidad (<code>reliability</code>).</li>
                    <li>Medias: menos partidas ⇒ medias menos representativas (puede inflar o bajar el BaseScore según los totales).</li>
                    <li>Confiabilidad: se aplica una curva logarítmica
                        <pre>reliability = Math.Min(1.0, Math.Log(MatchesCount + 1) / Math.Log(11))</pre>
                        - Matches = 0 → reliability = 0 (puntos 0).  
                        - Matches = 1 → ≈ 0.29.  
                        - Matches = 5 → ≈ 0.75.  
                        - Matches ≥ 10 → 1.0 (tope).
                    </li>
                    <li>Orden y desempate: además del TotalPoints, se usa MatchesCount como primer criterio de desempate (más partidas favorece).</li>
                </ul>

                <h6>Ejemplos rápidos</h6>
                <p>Si <strong>BaseScore = 0.80</strong> (antes de reliability):</p>
                <ul>
                    <li>Matches = 1 → final = 0.80 × 0.29 ≈ 0.23 → Puntos ≈ <strong>2.31</strong></li>
                    <li>Matches = 5 → final = 0.80 × 0.75 ≈ 0.60 → Puntos ≈ <strong>6.00</strong></li>
                    <li>Matches = 10 → final = 0.80 × 1.00 = 0.80 → Puntos = <strong>8.00</strong></li>
                </ul>

                <h6>Ejemplo completo (recordatorio)</h6>
                <p>Jugador "Alpha" (promedios por partido): Nockdowns=0.8, Asist=0.5, Kills=3.2, Headshots=0.8, Damage=1500, Revives=0.1, Time=1800, WinPlace=4.0, TeamKills=0. Matches=8.</p>
                <ol>
                    <li>Normalizaciones: <code>normKills=3.2/5=0.64</code>, <code>normDamage=1500/2000=0.75</code>, <code>normNockdowns=0.8</code>, <code>normWin=(8-4)/(8-1)=0.571</code>.</li>
                    <li>Score positivo ≈ 0.6682 → penalty 0 → baseScore = 0.6682.</li>
                    <li>Reliability = ln(8+1)/ln(11) ≈ 0.916 → finalNormalized ≈ 0.612.</li>
                    <li>Puntos finales = 0.612 × 10 = <strong>6.12</strong>.</li>
                </ol>

                <p>Notas:</p>
                <ul>
                    <li>El mismo algoritmo se aplica a diario, semanal, mensual e histórico; cambia sólo el conjunto de partidas usado para calcular medias y máximos.</li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function ($) {
            $(function () {
                // Enviar el formulario añadiendo fragmento para que el navegador vuelva al ancla
                $('#ddlPeriod').on('change', function (e) {
                    var $form = $('#filterForm');
                    // limpiar hash si ya existe
                    var action = ($form.attr('action') || window.location.pathname).split('#')[0];
                    // anexar fragmento que coincide con el id del contenedor
                    $form.attr('action', action + '#rankings');
                    $form.submit();
                });

                // ... tu código existente de actualización manual (si ya lo tienes)
                var $formUpdate = $('#formUpdateStats');
                var $btn = $('#btnUpdateStats');
                var $overlay = $('#loadingOverlay');

                if ($formUpdate.length && $btn.length) {
                    // (la lógica que ya tenías para update statistics)
                }

                // Fallback: si Bootstrap está cargado, el atributo data-bs-... abrirá el modal automáticamente.
                // Si quieres abrirlo por JS en algún otro sitio, puedes usar:
                // var m = new bootstrap.Modal(document.getElementById('scoringModal')); m.show();
            });
        })(jQuery);
    </script>
}
